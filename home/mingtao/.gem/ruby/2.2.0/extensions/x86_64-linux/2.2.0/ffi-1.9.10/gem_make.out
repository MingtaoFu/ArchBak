/usr/bin/ruby -r ./siteconf20151112-8046-1j5r4hr.rb extconf.rb
checking for ffi_call() in -lffi... yes
checking for ffi_prep_closure()... yes
checking for ffi_raw_call()... yes
checking for ffi_prep_raw_closure()... yes
checking for rb_thread_blocking_region()... no
checking for rb_thread_call_with_gvl()... yes
checking for rb_thread_call_without_gvl()... yes
checking for ffi_prep_cif_var()... yes
creating extconf.h
creating Makefile

make "DESTDIR=" clean

make "DESTDIR="
compiling FunctionInfo.c
compiling Thread.c
compiling ClosurePool.c
compiling AbstractMemory.c
compiling StructByReference.c
compiling Struct.c
compiling StructLayout.c
compiling Variadic.c
compiling Function.c
Function.c: 在函数‘async_cb_event’中:
Function.c:563:9: 警告：隐式声明函数‘rb_thread_call_without_gvl’ [-Wimplicit-function-declaration]
         rb_thread_call_without_gvl(async_cb_wait, &w, async_cb_stop, &w);
         ^
compiling Pointer.c
compiling LongDouble.c
compiling DynamicLibrary.c
compiling StructByValue.c
compiling MemoryPointer.c
compiling Types.c
compiling DataConverter.c
compiling LastError.c
compiling MethodHandle.c
compiling Platform.c
compiling Type.c
compiling ArrayType.c
compiling Buffer.c
compiling ffi.c
compiling MappedType.c
compiling Call.c
In file included from Call.c:62:0:
Call.c: 在函数‘do_blocking_call’中:
Thread.h:78:39: 警告：隐式声明函数‘rb_thread_call_without_gvl’ [-Wimplicit-function-declaration]
 # define rbffi_thread_blocking_region rb_thread_call_without_gvl
                                       ^
Call.c:368:5: 附注：in expansion of macro ‘rbffi_thread_blocking_region’
     rbffi_thread_blocking_region(call_blocking_function, data, (void *) -1, NULL);
     ^
linking shared-object ffi_c.so

make "DESTDIR=" install
/usr/bin/install -c -m 0755 ffi_c.so ./.gem.20151112-8046-61129y
